.\" Automatically generated by Pandoc 2.2.1
.\"
.TH "bup" "1" "2019\-08\-25" "Bup 0.29.3" ""
.hy
.SH NAME
.PP
bup \- Backup program using rolling checksums and git file formats
.SH SYNOPSIS
.PP
bup [global options\&...] <command> [options\&...]
.SH DESCRIPTION
.PP
\f[C]bup\f[] is a program for making backups of your files using the git
file format.
.PP
Unlike \f[C]git\f[](1) itself, bup is optimized for handling huge data
sets including individual very large files (such a virtual machine
images).
However, once a backup set is created, it can still be accessed using
git tools.
.PP
The individual bup subcommands appear in their own man pages.
.SH GLOBAL OPTIONS
.TP
.B \-\-version
print bup's version number.
Equivalent to \f[C]bup\-version\f[](1)
.RS
.RE
.TP
.B \-d, \-\-bup\-dir=\f[I]BUP_DIR\f[]
use the given BUP_DIR parameter as the bup repository location, instead
of reading it from the $BUP_DIR environment variable or using the
default \f[C]~/.bup\f[] location.
.RS
.RE
.SH COMMONLY USED SUBCOMMANDS
.TP
.B \f[C]bup\-fsck\f[](1)
Check backup sets for damage and add redundancy information
.RS
.RE
.TP
.B \f[C]bup\-ftp\f[](1)
Browse backup sets using an ftp\-like client
.RS
.RE
.TP
.B \f[C]bup\-fuse\f[](1)
Mount your backup sets as a filesystem
.RS
.RE
.TP
.B \f[C]bup\-help\f[](1)
Print detailed help for the given command
.RS
.RE
.TP
.B \f[C]bup\-index\f[](1)
Create or display the index of files to back up
.RS
.RE
.TP
.B \f[C]bup\-on\f[](1)
Backup a remote machine to the local one
.RS
.RE
.TP
.B \f[C]bup\-restore\f[](1)
Extract files from a backup set
.RS
.RE
.TP
.B \f[C]bup\-save\f[](1)
Save files into a backup set (note: run \[lq]bup index\[rq] first)
.RS
.RE
.TP
.B \f[C]bup\-web\f[](1)
Launch a web server to examine backup sets
.RS
.RE
.SH RARELY USED SUBCOMMANDS
.TP
.B \f[C]bup\-damage\f[](1)
Deliberately destroy data
.RS
.RE
.TP
.B \f[C]bup\-drecurse\f[](1)
Recursively list files in your filesystem
.RS
.RE
.TP
.B \f[C]bup\-init\f[](1)
Initialize a bup repository
.RS
.RE
.TP
.B \f[C]bup\-join\f[](1)
Retrieve a file backed up using \f[C]bup\-split\f[](1)
.RS
.RE
.TP
.B \f[C]bup\-ls\f[](1)
Browse the files in your backup sets
.RS
.RE
.TP
.B \f[C]bup\-margin\f[](1)
Determine how close your bup repository is to armageddon
.RS
.RE
.TP
.B \f[C]bup\-memtest\f[](1)
Test bup memory usage statistics
.RS
.RE
.TP
.B \f[C]bup\-midx\f[](1)
Index objects to speed up future backups
.RS
.RE
.TP
.B \f[C]bup\-newliner\f[](1)
Make sure progress messages don't overlap with output
.RS
.RE
.TP
.B \f[C]bup\-random\f[](1)
Generate a stream of random output
.RS
.RE
.TP
.B \f[C]bup\-server\f[](1)
The server side of the bup client\-server relationship
.RS
.RE
.TP
.B \f[C]bup\-split\f[](1)
Split a single file into its own backup set
.RS
.RE
.TP
.B \f[C]bup\-tick\f[](1)
Wait for up to one second.
.RS
.RE
.TP
.B \f[C]bup\-version\f[](1)
Report the version number of your copy of bup.
.RS
.RE
.SH SEE ALSO
.PP
\f[C]git\f[](1) and the \f[I]README\f[] file from the bup distribution.
.PP
The home of bup is at <http://github.com/bup/bup/>.
.SH AUTHORS
Avery Pennarun <apenwarr@gmail.com>.
